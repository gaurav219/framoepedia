version: '3'
services:
  postgres:
    image: 'postgres:latest'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=framoepedia
    ports:
      - '5432:5432'
    volumes:
      - ./data:/var/lib/postgresql/data
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - '4000:80'
    depends_on:
      - 'admin-frontend'
      - 'client-frontend'
      - 'admin-backend'
      - 'client-backend'
      - 'storage-broker'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    # networks:
    #   - app-network
  admin-backend:
    restart: always
    build:
      context: ./admin-backend
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./admin-backend:/app
    ports:
      - '5000:5000'
  client-backend:
    build:
      context: ./client-backend
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./client-backend:/app
    ports:
      - '5001:5001'
    # networks:
    #   - app-network
  admin-frontend:
    stdin_open: true
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./admin-frontend:/app
    ports:
      - '3000:3000'
  client-frontend:
    stdin_open: true
    build:
      context: ./client-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./client-frontend:/app
    ports:
      - '3001:3000'
    # networks:
    #   - app-network
  storage-broker:
    build:
      context: ./storage-broker
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./storage-broker:/app
    ports:
      - '5005:5005'
    environment:
      - DATABASE_URL="postgresql://postgres:postgres_password@localhost:5432/framoepedia?schema=public"

# networks:
#   app-network:
#     driver: bridge
